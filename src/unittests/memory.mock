/* -*- c -*-*/
#include "../memory.h"
#include <cgreen/mocks.h>

S_memory *cxMemory = NULL;

char ftMemory[SIZE_ftMemory];
int ftMemoryi = 0;


void memoryResize(void) {
  mock();
}

bool optionsOverflowHandler(int n) {
  return (int) mock(n);
}

bool cxMemoryOverflowHandler(int n) {
  return (int) mock(n);
}

void stackMemoryInit(void) {
  mock();
}

void addToTrail(void (*action)(void *), void *p) {
  mock(action, p);
}

void removeFromTrailUntil(S_freeTrail *untilP) {
  mock(untilP);
}

/* No mock, just allocate memory as requested */
void *stackMemoryAlloc(int size) {
  return (void *)malloc(size);
}

void *stackMemoryPush(void *p, int size) {
  return (void *) mock(p, size);
}

int *stackMemoryPushInt(int x) {
  return (int *) mock(x);
}

char *stackMemoryPushString(char *s) {
  return (char *) mock(s);
}

void stackMemoryPop(void *p, int size) {
  mock(p, size);
}

void stackMemoryBlockStart(void) {
  mock();
}

void stackMemoryBlockFree(void) {
  mock();
}

void stackMemoryDump(void) {
  mock();
}
