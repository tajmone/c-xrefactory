/* -*- c -*-*/
#include "classfilereader.h"
#include <cgreen/mocks.h>

S_zipFileTableItem s_zipArchiveTable[MAX_JAVA_ZIP_ARCHIVES];

void javaHumanizeLinkName(char *inn, char *outn, int size) {
  mock(inn, outn, size);
}

Symbol *cfAddCastsToModule(Symbol *memb, Symbol *sup) {
  return (Symbol *) mock(memb, sup);
}

void addSuperClassOrInterface(Symbol *memb, Symbol *supp, int origin) {
  mock(memb, supp, origin);
}

int javaCreateClassFileItem(Symbol *memb) {
  return (int) mock(memb);
}

void addSuperClassOrInterfaceByName(Symbol *memb, char *super, int origin, int loadSuper) {
  mock(memb, super, origin, loadSuper);
}

void fsRecMapOnFiles(S_zipArchiveDir *dir, char *zip, char *path, void (*fun)(char *zip, char *file, void *arg), void *arg) {
  mock(dir, zip, path, fun, arg);
}

bool fsIsMember(S_zipArchiveDir **dir, char *fn, unsigned offset, int addFlag, S_zipArchiveDir **place) {
  return (int) mock(dir, fn, offset, addFlag, place);
}

int zipIndexArchive(char *name) {
  return (int) mock(name);
}

bool zipFindFile(char *name, char **resName, S_zipFileTableItem *zipfile) {
  return (bool) mock(name, resName, zipfile);
}

void javaMapZipDirFile(S_zipFileTableItem *zipfile, char *packfile, S_completions *a1, void *a2, int *a3, void (*fun)(char *file, char *a1, char *a2, S_completions *a3, void *a4, int *a5), char *classPath, char *dirname) {
  mock(zipfile, packfile, a1, a2, a3, fun, classPath, dirname);
}

void javaReadClassFile(char *name, Symbol *cdef, int loadSuper) {
  mock(name, cdef, loadSuper);
}
