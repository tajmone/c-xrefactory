/* -*- c -*-*/
#include <cgreen/mocks.h>
#include "reftab.h"

ReferenceTable s_cxrefTab;


void refTabInit(
    ReferenceTable *table,
    int size
)
{
    mock(table, size);
}

void refTabNAInit(
    ReferenceTable *table,
    int size
) {
    mock(table, size);
}

bool refTabIsMember(
    ReferenceTable *table,
    SymbolReferenceItem *element,
    int *position,
    SymbolReferenceItem **origin
) {
    return(int)mock(table, element, position, origin);
}

int refTabMembEqual(
    SymbolReferenceItem *e1,
    SymbolReferenceItem *e2
) {
    return(int)mock(e1, e2);
}

int refTabNextMember(
    SymbolReferenceItem *element,
    SymbolReferenceItem **original
) {
    return(int)mock(element, original);
}

void refTabSet(
    ReferenceTable *table,
    SymbolReferenceItem *element,
    int position
) {
    mock(table, element, position);
}

void refTabSetLast(
    ReferenceTable *table,
    SymbolReferenceItem *element,
    int position
) {
    mock(table, element, position);
}

void refTabAdd(
    ReferenceTable *table,
    SymbolReferenceItem *element,
    int *position
) {
    mock(table, element, position);
}

int refTabDelete(
    ReferenceTable *table,
    SymbolReferenceItem *element
) {
    return(int)mock(table, element);
}


int refTabDeleteExact(
    ReferenceTable *table,
    SymbolReferenceItem *element
) {
    return(int)mock(table, element);
}

int refTabDeleteLast(
    ReferenceTable *table,
    SymbolReferenceItem *element
) {
    return(int)mock(table, element);
}

void refTabFree(
    ReferenceTable *table
) {
    mock(table);
}

void refTabMap(
    ReferenceTable *table,
    void(*fun)(SymbolReferenceItem *)
) {
    mock(table, fun);
}

void refTabMap2(
    ReferenceTable *table,
    void(*fun)(SymbolReferenceItem *, void *),
    void *a
) {
    mock(table, fun);
}

void refTabMap3(
    ReferenceTable *table,
    void(*fun)(int)
) {
    mock(table, fun);
}

void refTabMap31(
    ReferenceTable *table,
    void(*fun)(int, void *, void *),
    void *arg1, void *arg2
) {
    mock(table, fun, arg1, arg2);
}

void refTabMap32(
    ReferenceTable *table,
    void(*fun)(int, void *, void *, void *),
    void *arg1, void *arg2, void *arg3
) {
    mock(table, fun, arg1, arg2, arg3);
}

void refTabMap4(
    ReferenceTable *table,
    void(*fun)(SymbolReferenceItem *, int),
    int i
) {
    mock(table, fun, i);
}

void refTabMap5(
    ReferenceTable *table,
    void(*fun)(SymbolReferenceItem *, void *),
    void *arg
) {
    mock(table, fun, arg);
}

void refTabStatistics(
    ReferenceTable *table,
    int *usedIndexes,
    int *elements,
    int *maxdepth
) {
    mock(table, usedIndexes, elements, maxdepth);
}
