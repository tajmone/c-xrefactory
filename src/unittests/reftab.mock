/* -*- c -*-*/
#include <cgreen/mocks.h>
#include "reftab.h"

S_refTab s_cxrefTab;


void refTabInit (
                    struct refTab *table,
                    int size
                )
{
    mock(table, size);
}

void refTabNAInit(
                    struct refTab *table,
                    int size
                ) {
    mock(table, size);
}

bool refTabIsMember (
                    struct refTab *table,
                    SymbolReferenceItem *element,
                    int *position,
                    SymbolReferenceItem **origin
                ) {
    return (int)mock(table, element, position, origin);
}

int refTabMembEqual(
                    SymbolReferenceItem *e1,
                    SymbolReferenceItem *e2
            ) {
    return (int)mock(e1, e2);
}

int refTabNextMember(
                    SymbolReferenceItem *element,
                    SymbolReferenceItem **original
            ) {
    return (int)mock(element, original);
}

void refTabSet (
                    struct refTab *table,
                    SymbolReferenceItem *element,
                    int position
                ) {
    mock(table, element, position);
}

void refTabSetLast (
                    struct refTab *table,
                    SymbolReferenceItem *element,
                    int position
                ) {
    mock(table, element, position);
}

void refTabAdd (
                    struct refTab *table,
                    SymbolReferenceItem *element,
                    int *position
                ) {
    mock(table, element, position);
}

int refTabDelete(
                    struct refTab *table,
                    SymbolReferenceItem *element
            ) {
    return (int)mock(table, element);
}


int refTabDeleteExact(
                    struct refTab *table,
                    SymbolReferenceItem *element
            ) {
    return (int)mock(table, element);
}

int refTabDeleteLast(
                    struct refTab *table,
                    SymbolReferenceItem *element
            ) {
    return (int)mock(table, element);
}

void refTabFree(
                    struct refTab *table
                ) {
    mock(table);
}

void refTabMap(
                    struct refTab *table,
                    void (*fun)(SymbolReferenceItem *)
                ) {
    mock(table, fun);
}

void refTabMap2(
                    struct refTab *table,
                    void (*fun)(SymbolReferenceItem *, void *),
                    void *a
                ) {
    mock(table, fun);
}

void refTabMap3(
                    struct refTab *table,
                    void (*fun)(int)
                ) {
    mock(table, fun);
}

void refTabMap31(
                    struct refTab *table,
                    void (*fun)(int, void *, void *),
                    void *arg1, void *arg2
                ) {
    mock(table, fun, arg1, arg2);
}

void refTabMap32(
                    struct refTab *table,
                    void (*fun)(int, void *, void *, void *),
                    void *arg1, void *arg2, void *arg3
                ) {
    mock(table, fun, arg1, arg2, arg3);
}

void refTabMap4(
                    struct refTab *table,
                    void (*fun)(SymbolReferenceItem *, int),
                    int i
                ) {
    mock(table, fun, i);
}

void refTabMap5(
                    struct refTab *table,
                    void (*fun)(SymbolReferenceItem *, void *),
                    void *arg
                ) {
    mock(table, fun, arg);
}

void refTabStatistics(
                    struct refTab *table,
                    int *usedIndexes,
                    int *elements,
                    int *maxdepth
                ) {
    mock(table, usedIndexes, elements, maxdepth);
}
