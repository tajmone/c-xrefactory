#include "editor.h"


void ppcSynchronize(void) {
  mock();
}

void ppcIndent(void) {
  mock();
}

void ppcGotoOffsetPosition(char *fname, int offset) {
  mock(fname, offset);
}

void ppcGenRecordBegin(char *kind) {
  mock(kind);
}

void ppcGenRecordWithAttributeBegin(char *kind, char *attr, char *val) {
  mock(kind, attr, val);
}

void ppcGenRecordWithNumAttributeBegin(char *kind, char *attr, int val) {
  mock(kind, attr, val);
}

void ppcGenRecordEnd(char *kind) {
  mock(kind);
}

void ppcGenNumericRecordBegin(char *kind, int val) {
  mock(kind, val);
}

void ppcGenTwoNumericAndRecordBegin(char *kind, char *attr1, int val1, char *attr2, int val2) {
  mock(kind, attr1, val1, attr2, val2);
}

void ppcGenWithNumericAndRecordBegin(char *kind, int val, char *attr, char *attrVal) {
  mock(kind, val, attr, attrVal);
}

void ppcGenAllCompletionsRecordBegin(int nofocus, int len) {
  mock(nofocus, len);
}

void ppcGenTwoNumericsAndrecord(char *kind, char *attr1, int val1, char *attr2, int val2, char *message, char *suff) {
  mock(kind, attr1, val1, attr2, val2, message, suff);
}

void ppcGenRecordWithNumeric(char *kind, char *attr, int val, char *message) {
  mock(kind, attr, val, message);
}

void ppcGenNumericRecord(char *kind, int val, char *message) {
  mock(kind, val, message);
}

void ppcGenRecord(char *kind, char *message) {
  mock(kind, message);
}

void ppcGenTmpBuff(void) {
  mock();
}

void ppcDisplaySelection(char *message, int messageType, int continuation) {
  mock(message, messageType, continuation);
}

void ppcGotoMarker(EditorMarker *pos) {
  mock(pos);
}

void ppcGenDefinitionNotFoundWarning(void) {
  mock();
}

void ppcGenDefinitionNotFoundWarningAtBottom(void) {
  mock();
}

void ppcReplace(char *file, int offset, char *oldName, int oldNameLen, char *newName) {
  mock(file, offset, oldName, oldNameLen, newName);
}

void ppcPreCheck(EditorMarker *pos, int oldLen) {
  mock(pos, oldLen);
}

void ppcReferencePreCheck(Reference *r, char *text) {
  mock(r, text);
}

void ppcGotoPosition(Position *p) {
  mock(p);
}

void ppcGenOffsetPosition(char *fn, int offset) {
  mock(fn, offset);
}
