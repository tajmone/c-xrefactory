/* *********************************************************************** */
/* .h template for hashed table */

/* This requires the definition of these variables prior to inclusion
    HASH_TAB_NAME			name of type of table, will be a struct, will also be function prefix
    HASH_ELEM_TYPE			type of the elements in the hashtable

*/


#define GLUE(a,b) a ## b
#define CONCAT(a,b) GLUE(a,b)

/* Here we construct TAB_TYPE and FUN_PREFIX from TAB_NAME */
#define HASH_TAB_TYPE struct HASH_TAB_NAME
#define HASH_FUN_PREFIX HASH_TAB_NAME

typedef HASH_TAB_TYPE {
    int size;
    HASH_ELEM_TYPE **tab;				/* *tab[size];*/
} CONCAT(S_, HASH_FUN_PREFIX);


extern void CONCAT(HASH_FUN_PREFIX, Init) (		/* Init */
                    HASH_TAB_TYPE *tab,
                    int size
                );
extern void CONCAT(HASH_FUN_PREFIX, NAInit)(		/* not alloc init */
                    HASH_TAB_TYPE *t,
                    int size
                );
extern int  CONCAT(HASH_FUN_PREFIX, IsMember) (	/* IsMember */
                    HASH_TAB_TYPE *tab,
                    HASH_ELEM_TYPE *elem,
                    int *position,
                    HASH_ELEM_TYPE **origin
                );
extern int CONCAT(HASH_FUN_PREFIX, MembEqual)(
                    HASH_ELEM_TYPE *e1,
                    HASH_ELEM_TYPE *e2
            );
extern int CONCAT(HASH_FUN_PREFIX, NextMember)(
                    HASH_ELEM_TYPE *elem,
                    HASH_ELEM_TYPE **original
            );
extern void CONCAT(HASH_FUN_PREFIX, Set) (		/* prepend elem at position */
                    HASH_TAB_TYPE *t,
                    HASH_ELEM_TYPE *elem,
                    int position
                );
extern void CONCAT(HASH_FUN_PREFIX, SetLast) (	/* append elem at position */
                    HASH_TAB_TYPE *t,
                    HASH_ELEM_TYPE *elem,
                    int position
                );
extern void CONCAT(HASH_FUN_PREFIX, Add) (	/* Add, returns position */
                    HASH_TAB_TYPE *tab,
                    HASH_ELEM_TYPE *elem,
                    int *position
                );
extern int CONCAT(HASH_FUN_PREFIX, Delete)(	/* Delete first of elem from tab */
                    HASH_TAB_TYPE *t,
                    HASH_ELEM_TYPE *elem
            );
/* Delete first of elem from tab, check exact equality of pointers */
extern int CONCAT(HASH_FUN_PREFIX, DeleteExact)(
                    HASH_TAB_TYPE *t,
                    HASH_ELEM_TYPE *elem
            );
extern int CONCAT(HASH_FUN_PREFIX, DeleteLast)(/* Delete last of elem from tab */
                    HASH_TAB_TYPE *t,
                    HASH_ELEM_TYPE *elem
            );
extern void CONCAT(HASH_FUN_PREFIX, Free)(
                    HASH_TAB_TYPE *tab
                );
extern void CONCAT(HASH_FUN_PREFIX, Map)(
                    HASH_TAB_TYPE *tab,
                    void (*fun)(HASH_ELEM_TYPE *)
                );
extern void CONCAT(HASH_FUN_PREFIX, Map2)(
                    HASH_TAB_TYPE *tab,
                    void (*fun)(HASH_ELEM_TYPE *, void *),
                    void *
                );
extern void CONCAT(HASH_FUN_PREFIX, Map3)(
                    HASH_TAB_TYPE *tab,
                    void (*fun)(int)
                );
extern void CONCAT(HASH_FUN_PREFIX, Map31)(
                    HASH_TAB_TYPE *tab,
                    void (*fun)(int, void *, void *),
                    void *arg1, void *arg2
                );
extern void CONCAT(HASH_FUN_PREFIX, Map32)(
                    HASH_TAB_TYPE *tab,
                    void (*fun)(int, void *, void *, void *),
                    void *arg1, void *arg2, void *arg3
                );
extern void CONCAT(HASH_FUN_PREFIX, Map4)(
                    HASH_TAB_TYPE *tab,
                    void (*fun)(HASH_ELEM_TYPE *, int),
                    int
                );
extern void CONCAT(HASH_FUN_PREFIX, Map5)(
                    HASH_TAB_TYPE *tab,
                    void (*fun)(HASH_ELEM_TYPE *, void *),
                    void *arg
                );
extern void CONCAT(HASH_FUN_PREFIX, Statistics)(
                    HASH_TAB_TYPE *t,
                    int *usedIndexes,
                    int *elements,
                    int *maxdeep
                );

#undef GLUE
#undef CONCAT
#undef HASH_TAB_TYPE
#undef HASH_FUN_PREFIX

/* Local Variables: */
/* mode: c */
/* End: */
